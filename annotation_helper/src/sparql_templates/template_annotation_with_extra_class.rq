# Template to autofill where SPARQL's bind cannot and Python can.
# That is, all strings with "REPLACEME" should be replaced as follows:
# REPLACEME1 _database name
# REPLACEME2 actual variable local definition
# REPLACEME:3 actual variable predicate
# REPLACEME:4 actual variable class
# REPLACEME5 added class label
# REPLACEME:6 added class predicate
# REPLACEME:7 added class class (sorry)

PREFIX db: <http://data.local/rdf/ontology/>
PREFIX dbo: <http://um-cds/ontologies/databaseontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX roo: <http://www.cancerdata.org/roo/>
PREFIX ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>
PREFIX REPLACEME: <>


INSERT {
    GRAPH <http://annotation.local/> {

        ?tablerow REPLACEME:6 ?class.

        ?class REPLACEME:3 ?variable.


        db:REPLACEME1.REPLACEME2 owl:equivalentClass REPLACEME:4.

        db:REPLACEME1.REPLACEME5 owl:equivalentClass REPLACEME:7.


        db:REPLACEME1 owl:equivalentClass ncit:C16960.

        dbo:has_value owl:sameAs roo:P100042.

        dbo:has_unit owl:sameAs roo:P100047.

        dbo:cell_of rdf:type owl:ObjectProperty ;
            owl:inverseOf dbo:has_cell.

    }
}

WHERE {
    ?tablerow rdf:type db:REPLACEME1 .

    ?tablerow REPLACEME:6 ?class .

    ?tablerow dbo:has_column ?variable .

    ?class rdf:type db:REPLACEME1.REPLACEME5 .

    ?variable rdf:type db:REPLACEME1.REPLACEME2 .

}